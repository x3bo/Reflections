When would you want to create a remote repository rather than keeping all your work local?
I would use remote repository if I want to share my work with others 
and/or if I wnat to work from different computers.

Why might you want to always pull changes manually 
rather than having Git automatically stay up-to-date with your remote repository?
Beacuse not always it is necessary to share all your commits. 
Some times it is more interesting to share a group of commits 
that helps others to have a whole idea of what you are working on.

Describe the differences between forks, clones, and branches. 
When would you use one instead of another?
On one hand, I'll use branches when I'd like to have experimental 
changes or different versions of my master branch.
On th other hand, I'll use clone, to clone the repository 
to my local computer from either my local computer or the cloud (GitHUb)
Finally, I'll use fork to clone a repository of a GitHub user 
to my account onto GitHub (from cloud to cloud).

What is the benefit of having a copy of 
the last known state of the remote stored locally?
In my opinion, one benefit is to know the traceability,
the commits show the different steps of your code.

How would you collaborate without using Git or GitHub? 
What would be easier, and what would be harder?
I would use email o something like this,
but it's much better working with GitHub in orther to
have better traceability of our work. On the other hand, 
it could be easier if we could modify a commit 
without creating a new one, for instance, to arrange a typo.

When would you want to make changes in a separate branch 
rather than directly in master? What benefits does each approach have?
Once again, changes in separate branches would have 2 goals:
first, sharing your code with collaborators before 
you'd introduce those changes. 
And second, to have a different version of the master code.
The basic benefit is to maintain the mster branch as consolidate 
as possible.